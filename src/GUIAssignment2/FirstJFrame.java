/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIAssignment2;
import java.sql.*; 
/**
 *
 * @author student
 */
public class FirstJFrame extends javax.swing.JFrame {

    /**
     * Creates new form FirstJFrame
     */
    public FirstJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dbbutton = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.SystemColor.activeCaption);

        dbbutton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dbbutton.setText("create database");
        dbbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbbuttonActionPerformed(evt);
            }
        });

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jToggleButton1.setText("start");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIAssignment2/car - Copy.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Welcome To access ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("the database press create ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("and then start ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dbbutton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dbbutton, jToggleButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dbbutton, jToggleButton1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dbbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbbuttonActionPerformed
        //start of button
       
        String url = "jdbc:sqlite:c:/mydb/Dddillon4.db"; 
        
        try { //loads driver into memory, just one way of doing it
            Class.forName("org.sqlite.JDBC").newInstance(); 
          } catch (Exception ex) {
        }//end try catch
        
        //Makes a connection called conn to the url created earlier
        try (Connection conn = DriverManager.getConnection(url)) {
            if (conn != null) { //if the connection is not null 
                dbbutton.setText("The database has been created."); //change the text on the create DB button
            }//end if
        } catch (SQLException e) {
            System.out.println(e.getMessage()); //println for catching error, popup would be better
        }//end try catch

                //string to be passes as a statement, creates the table warehouses
                String sql = "CREATE TABLE IF NOT EXISTS cars (\n"
                + "	id integer PRIMARY KEY,\n"
                + "	make text NOT NULL,\n"
                + "	model text NOT NULL, \n"
                + "	year text NOT NULL,\n"
                + "	milage text NOT NULL,\n"
                + "	colour text NOT NULL,\n" 
                + "	doors text NOT NULL, \n"
                + "	costin text NOT NULL,\n"
                + "	costout text NOT NULL,\n"
                + "	tax text NOT NULL\n"
                        
          
                        
                + ");";
                
                 String sqlCus = "CREATE TABLE IF NOT EXISTS customers (\n"
                + "	customerid integer PRIMARY KEY,\n"
                + "	customername text NOT NULL,\n"
                + "	customeremail text NOT NULL, \n"
                + "	customerphoneno text NOT NULL,\n"
                + "	customeraddress text NOT NULL\n"
               
               
                         
                                
                + ");";
                  String sqlEmp = "CREATE TABLE IF NOT EXISTS employees (\n"
                + "	employeeid integer PRIMARY KEY,\n"
                + "	employeename text NOT NULL,\n"
                + "	employeeemail text NOT NULL, \n"
                + "	employeephoneno text NOT NULL,\n"
                + "	employeerole text NOT NULL,\n"
                           + "	employeesalary text NOT NULL\n"      
               + ");";
                
                    String sqlSer = "CREATE TABLE IF NOT EXISTS service (\n"
                + "	serviceid integer PRIMARY KEY,\n"
                + "	servicedate text NOT NULL,\n"
                + "	servicecost text NOT NULL, \n"
                + "	 customername text NOT NULL,\n"
               +"FOREIGN KEY(customername) REFERENCES CUSTOMERS(customerid)\n"
               + ");";
                  
                    
                      String sqlPur = "CREATE TABLE IF NOT EXISTS purchase (\n"
                + "	id integer PRIMARY KEY,\n"
                + "	make text NOT NULL,\n"
                + "	model text NOT NULL, \n"
                + "	year text NOT NULL,\n"
                + "	milage text NOT NULL,\n"
                + "	colour text NOT NULL,\n" 
                + "	doors text NOT NULL, \n"
                + "	costout text NOT NULL,\n"
                + "	name text NOT NULL,\n"
                + "	email text NOT NULL,\n"
                + "	phoneno text NOT NULL,\n"
                + "	tax text NOT NULL,\n"
                          +"FOREIGN KEY(name) REFERENCES CUSTOMERS(customerid)\n"
          
                        
                + ");";
                  
                
        
        //Makes a connection called conn to the url created earlier
        //may not be needed again if used already, no harm in retrying
        try (Connection conn = DriverManager.getConnection(url);
        Statement stmt = conn.createStatement()) { //makes a statement object called stmt
        stmt.execute(sql); //passes the sql string statement to stmt
         stmt.execute(sqlCus); //passes the sql string statement to stmt
          stmt.execute(sqlEmp);
           stmt.execute(sqlSer);
                   stmt.execute(sqlPur);
        } catch (SQLException e) {
        System.out.println(e.getMessage()); //println for catching error, popup would be better
        }//end try catch
            
        Statement stmt = null; //clear stmt after first usage
        //Makes a connection called conn to the url created earlier
        //may not be needed again if used already, no harm in retrying
        try {Connection conn = DriverManager.getConnection(url);
        stmt = conn.createStatement();
        //add to Cars table
       
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1001,'BMW','5Series','2016','25000','blue','5','30000','45000','600')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1002,'Audi','RS6','2018','30000','red','5','40000','50000','800')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1003,'Ford','Focus','2013','65000','Black','5','10000','13500','150')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1004,'Nissan','Juke','2015','50000','red','5','12000','15000','200')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1005,'Honda','Civic','2021','1000','Gray','5','15000','25000','250')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1006,'Mercedes','AClass','2018','25000','White','5','17000','30000','300')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1007,'Audi','A3','2009','50000','Gray','5','9000','11000','150')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1008,'Tayota','Prius','2012','35000','White','5','10000','13000','200')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1009,'Mini Cooper','D','2012','55000','Black','4','14500','17000','100')");
        stmt.executeUpdate("INSERT INTO cars " + "VALUES (1010,'Ford','Fiesta','2014','25000','Red','5','8000','10000','150')");
             
         
         //add to customers
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1111,'Tom Erichsen','Erichasen@gmail.com','0891637827','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1112,'Dillon Oconnor','Dillon@gmail.com','0878273736','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1113,'Stephen Ryan','Stephen@gmail.com','0863738294','Wicklow')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1114,'Kevin Furlong','Kevin@gmail.com','0837365284','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1115,'Brian Collins','Brian@gmail.com','0876451234','Meath')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1116,'Joan Burke','Joan@gmail.com','0876451295','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1117,'Luke Shaw','Luke@gmail.com','0867394756','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1118,'Ciara Kennedy','Ciara@gmail.com','0874651298','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1119,'Simon Ryan','Simon@gmail.com','0876523865','Dublin')");
         stmt.executeUpdate("INSERT INTO customers " + "VALUES (1110,'Gary Kelly','Gary@gmail.com','0867424638','Dublin')");
                                       
                  
           //add to employees
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3001,'Dillon OConnor','0891637827','Dillon1@gmail.com','Manager','90,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3002,'Darragh Smilth','0876452352','Darragh@gmail.com','Mechanic','45,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3003,'Brian Munter','0853482657','Brian@gmail.com','Marketing','50,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3004,'Fred Jones','0876543627','Fred@gmail.com','car cleaner','25,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3005,'Anne Lavin','0891637827','Dillon@gmail.com','Accounts','70,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3006,'Kate ORilly','0864742351','Kate@gmail.com','Sales','60,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3007,'Pat Douglas','0897563547','Pat@gmail.com','Mechanic','45,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3008,'Paul Adams','0875672546','Paul@gmail.com','Assistant Manager','75,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3009,'Ben Murrin','0853737583','Ben@gmail.com','sales','60,000')");
         stmt.executeUpdate("INSERT INTO employees " + "VALUES (3010,'Neil Kane','0864529478','Neil@gmail.com','Accounts','70,000')");
         
         
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4001,'23/10/2022','Premium200','Dillon')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4002,'18/11/2022','Standard100','Liam')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4003,'21/07/2022','Standard100','Cian')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4004,'11/03/2022','Premium200','Gavin')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4005,'14/02/2022','Standard100','Adam')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4006,'17/05/2022','Standard100','Eoin')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4007,'26/07/2022','Premium200','Pat')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4008,'24/04/2022','Standard100','Mary')");
         stmt.executeUpdate("INSERT INTO service " + "VALUES (4009,'01/02/2022','Premium200','Josh')");
          stmt.executeUpdate("INSERT INTO service " + "VALUES (4010,'23/09/2022','Standard100','Jack')");
         
         
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2001,'Audi','R8','2019','20,000','White','2','55,000','700','Gavin Kelly','Gavin@gmail.com','0897652354')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2002,'Toyota','Avensis','2013','40,000','Sliver','5','12,000','200','Kevin Doyle','Kevin@gmail.com','0876541235')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2003,'Volkswagen','Passat','2020','10,000','Black','5','30,000','300','Dean Murphy','Dean@gmail.com','0876451284')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2004,'Nissan','Qashqai','2017','60,000','gray','5','18,000','200','conor wyse','conor@gmail.com','08764524265')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2005,'Audi','A4','2008','90,000','Red','5','5,000','200','Jack Murphy','Jack@gmail.com','0894653463')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2006,'Kia','Sportage','2013','100,000','White','5','12,000','200','Jordan Doran','Jordan@gmail.com','0864563547')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2007,'Ford','Focus','2008','102,000','White','5','5,000','150','Darragh Shaw','Darragh@gmail.com','0876549874')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2008,'Audi','A4','2002','150,000','Red','5','2,500','200','Robert Kelly','Robert@gmail.com','0874531289')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2009,'Ford','Focus','2013','150,000','Blue','5','10,000','200','Callum Johnson','Callum@gmail.com','0897653546')");
          stmt.executeUpdate("INSERT INTO purchase " + "VALUES (2010,'BMW','3Series','2015','160,000','Gray','5','13,500','300','Dylan Tracy','Dylan@gmail.com','0874563524')");
                           
         
         
        } catch (SQLException e) {
            System.out.print(e); //println for catching error, popup would be better
        }//end try catch
    //end button press

    }//GEN-LAST:event_dbbuttonActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        //start of button
this.dispose(); //dispose of the first frame
Main.main(null); //open the second frame and pass no argument
//end button press

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dbbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
